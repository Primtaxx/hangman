{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      steps: 0,\n      word: '',\n      wordLetters: [],\n      guessedLetters: [],\n      letter: '',\n      message: '',\n      giveUp: false\n    };\n  },\n  mounted() {\n    // Fetch a word from the worldlist.json file\n    axios.get('worldlist.json').then(response => {\n      this.word = response.data.word;\n      this.wordLetters = this.word.split('');\n    });\n  },\n  methods: {\n    guessLetter() {\n      // Check if the letter has been guessed already\n      if (this.guessedLetters.includes(this.letter)) {\n        this.message = 'You have already guessed that letter';\n        return;\n      }\n\n      // Add the letter to the guessed letters\n      this.guessedLetters.push(this.letter);\n\n      // Check if the word contains the letter\n      if (this.word.includes(this.letter)) {\n        this.message = 'Correct!';\n\n        // Check if the player has won\n        if (!this.wordLetters.some(letter => !this.guessedLetters.includes(letter))) {\n          this.message = 'You win!';\n          this.giveUp = false;\n        }\n      } else {\n        this.message = 'Incorrect!';\n        this.steps += 1;\n\n        // Check if the player has lost\n        if (this.steps === 10) {\n          this.message = 'You lose!';\n          this.giveUp = false;\n        }\n      }\n\n      // Reset the letter input\n      this.letter = '';\n    },\n    giveUp() {\n      this.message = 'You give up!';\n      this.giveUp = false;\n      this.word = '';\n    }\n  }\n};","map":{"version":3,"mappings":";AAuBA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE,EAAE;MAClBC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR;IACAC,KAAK,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;MAC3C,IAAI,CAACV,IAAG,GAAIU,QAAQ,CAACZ,IAAI,CAACE,IAAI;MAC9B,IAAI,CAACC,WAAU,GAAI,IAAI,CAACD,IAAI,CAACW,KAAK,CAAC,EAAE,CAAC;IACxC,CAAC,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ;MACA,IAAI,IAAI,CAACX,cAAc,CAACY,QAAQ,CAAC,IAAI,CAACX,MAAM,CAAC,EAAE;QAC7C,IAAI,CAACC,OAAM,GAAI,sCAAsC;QACrD;MACF;;MAEA;MACA,IAAI,CAACF,cAAc,CAACa,IAAI,CAAC,IAAI,CAACZ,MAAM,CAAC;;MAErC;MACA,IAAI,IAAI,CAACH,IAAI,CAACc,QAAQ,CAAC,IAAI,CAACX,MAAM,CAAC,EAAE;QACnC,IAAI,CAACC,OAAM,GAAI,UAAU;;QAEzB;QACA,IAAI,CAAC,IAAI,CAACH,WAAW,CAACe,IAAI,CAACb,MAAK,IAAK,CAAC,IAAI,CAACD,cAAc,CAACY,QAAQ,CAACX,MAAM,CAAC,CAAC,EAAE;UAC3E,IAAI,CAACC,OAAM,GAAI,UAAU;UACzB,IAAI,CAACC,MAAK,GAAI,KAAK;QACrB;MACF,OAAO;QACL,IAAI,CAACD,OAAM,GAAI,YAAY;QAC3B,IAAI,CAACL,KAAI,IAAK,CAAC;;QAEf;QACA,IAAI,IAAI,CAACA,KAAI,KAAM,EAAE,EAAE;UACrB,IAAI,CAACK,OAAM,GAAI,WAAW;UAC1B,IAAI,CAACC,MAAK,GAAI,KAAK;QACrB;MACF;;MAEA;MACA,IAAI,CAACF,MAAK,GAAI,EAAE;IAClB,CAAC;IACDE,MAAM,GAAG;MACP,IAAI,CAACD,OAAM,GAAI,cAAc;MAC7B,IAAI,CAACC,MAAK,GAAI,KAAK;MACnB,IAAI,CAACL,IAAG,GAAI,EAAE;IAChB;EACF;AACF,CAAC","names":["data","steps","word","wordLetters","guessedLetters","letter","message","giveUp","mounted","axios","get","then","response","split","methods","guessLetter","includes","push","some"],"sourceRoot":"","sources":["/Users/miguel/hangman/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"hangman\">\n    <img :src=\"'hangman' + steps + '.png'\" />\n    <p v-if=\"word\">{{ word }}</p>\n    <template v-else>\n      <p v-for=\"letter in wordLetters\">\n        <span v-if=\"guessedLetters.includes(letter)\">{{ letter }}</span>\n        <span v-else>_</span>\n      </p>\n    </template>\n    <form v-on:submit.prevent=\"guessLetter\">\n      <label>\n        Guess a letter:\n        <input v-model=\"letter\" type=\"text\" maxlength=\"1\" />\n      </label>\n      <button type=\"submit\">Guess</button>\n    </form>\n    <p v-if=\"message\">{{ message }}</p>\n    <button v-if=\"giveUp\" v-on:click=\"giveUp\">Give up</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      steps: 0,\n      word: '',\n      wordLetters: [],\n      guessedLetters: [],\n      letter: '',\n      message: '',\n      giveUp: false,\n    };\n  },\n  mounted() {\n    // Fetch a word from the worldlist.json file\n    axios.get('worldlist.json').then(response => {\n      this.word = response.data.word;\n      this.wordLetters = this.word.split('');\n    });\n  },\n  methods: {\n    guessLetter() {\n      // Check if the letter has been guessed already\n      if (this.guessedLetters.includes(this.letter)) {\n        this.message = 'You have already guessed that letter';\n        return;\n      }\n\n      // Add the letter to the guessed letters\n      this.guessedLetters.push(this.letter);\n\n      // Check if the word contains the letter\n      if (this.word.includes(this.letter)) {\n        this.message = 'Correct!';\n\n        // Check if the player has won\n        if (!this.wordLetters.some(letter => !this.guessedLetters.includes(letter))) {\n          this.message = 'You win!';\n          this.giveUp = false;\n        }\n      } else {\n        this.message = 'Incorrect!';\n        this.steps += 1;\n\n        // Check if the player has lost\n        if (this.steps === 10) {\n          this.message = 'You lose!';\n          this.giveUp = false;\n        }\n      }\n\n      // Reset the letter input\n      this.letter = '';\n    },\n    giveUp() {\n      this.message = 'You give up!';\n      this.giveUp = false;\n      this.word = '';\n    },\n  },\n};\n</script>\n\n<style>\n.hangman {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nimg {\n  height: 300px;\n}\n\np {\n  font-size: 2em;\n  margin: 10px 0;\n}\n\nspan {\n  font-size: 2em;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}