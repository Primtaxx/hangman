{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Press 'c' on keyboard to cheat\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 1,\n  class: \"Tastertur\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = {\n  key: 3\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = [\"src\", \"alt\"];\nconst _hoisted_8 = {\n  style: {\n    \"width\": \"50%\",\n    \"margin\": \"auto\"\n  }\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Highscore\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.highscore), 1 /* TEXT */), _hoisted_1, !_ctx.gameStart ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startGame && $options.startGame(...args))\n  }, \"Start\")) : _createCommentVNode(\"v-if\", true), _ctx.gameStart ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.letters, letter => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      class: \"button\",\n      key: letter,\n      onClick: $event => $options.buttonPressed(letter)\n    }, _toDisplayString(letter), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _ctx.gameStart && _ctx.cheat ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(_ctx.currentWord), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _ctx.gameStart ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(_ctx.anzeigeString), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_6, _createElementVNode(\"img\", {\n    src: require('./img/' + _ctx.fehler + '.jpg'),\n    alt: _ctx.fehler\n  }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"table\", _hoisted_8, [_hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.storage, e => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: e\n    }, [_createElementVNode(\"td\", null, _toDisplayString(e[0]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(e[1]), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEEA,oBAAqC,WAAlC,gCAA8B;;;EAE5BC,KAAK,EAAC;;;;;;;;;gCAMXD,oBAAI;;;EAGGE,KAA8B,EAA9B;IAAA;IAAA;EAAA;AAA8B;gCACrCF,oBAIK,0BAHHA,oBAAa,YAAT,MAAI,gBACRA,oBAAkB,YAAd,WAAS;;;6DAffA,oBAAoB,4BAAfG,cAAS,kBACdC,UAAqC,GACtBD,cAAS,kBAAxBE,oBAA2E;;IAAhDJ,KAAK,EAAC,QAAQ;IAAEK,OAAK,yCAAEC,iDAAS;KAAE,OAAK,wCACrCJ,cAAS,kBAAtCE,oBAGM,OAHNG,UAGM,sBAFJH,oBAAiHI,6BAAzEN,YAAO,EAAjBO,MAAM;yBAApCL,oBAAiH;MAAzGJ,KAAK,EAAC,QAAQ;MAA4BU,GAAG,EAAED,MAAM;MAAGJ,OAAK,YAAEC,sBAAa,CAACG,MAAM;wBAAKA,MAAM;yEAG/FP,cAAS,IAAIA,UAAK,kBAA3BE,oBAAgD,kCAAjBF,gBAAW,uDACjCA,cAAS,kBAAlBE,oBAAyC,kCAAnBF,kBAAa,uDACnCS,UAAI,EACJZ,oBAA2D;IAArDa,GAAG,EAAEC,OAAO,YAAWX,WAAM;IAAWY,GAAG,EAAEZ;uCAEnDH,oBAYM,SAZNgB,UAYM,GAXNC,UAIK,qBACLZ,oBAIKI,6BAJWN,YAAO,EAAZe,CAAC;yBAAZb,oBAIK;MAJqBM,GAAG,EAAEO;IAAC,IAC9BlB,oBAAiB,6BAAXkB,CAAC,qBACPlB,oBAAiB,6BAAXkB,CAAC","names":["_createElementVNode","class","style","_ctx","_hoisted_1","_createElementBlock","onClick","$options","_hoisted_2","_Fragment","letter","key","_hoisted_6","src","require","alt","_hoisted_8","_hoisted_9","e"],"sourceRoot":"","sources":["/Users/miguel/hangman/src/App.vue"],"sourcesContent":["<template>\n  <p>{{highscore}}</p>\n  <p>Press 'c' on keyboard to cheat</p>\n  <button v-if=\"!gameStart\"  class=\"button\" @click=\"startGame\">Start</button>\n  <div class=\"Tastertur\" v-if=\"gameStart\" >\n    <button class=\"button\" v-for=\"letter in letters\" :key=\"letter\" @click=\"buttonPressed(letter)\">{{letter}}</button>\n    \n  </div>\n  <p v-if=\"gameStart && cheat\">{{currentWord}}</p>\n  <p v-if=\"gameStart\">{{anzeigeString}}</p>\n  <br>\n  <img :src=\"require('./img/' +fehler+'.jpg')\" :alt=\"fehler\">\n\n  <table style=\"width:50%; margin:auto\">\n  <tr>\n    <th>Date</th>\n    <th>Highscore</th>\n    \n  </tr>\n  <tr v-for=\"e in storage\" :key=\"e\">\n    <td>{{e[0]}}</td>\n    <td>{{e[1]}}</td>\n    \n  </tr>\n  \n</table>\n</template>\n\n<script>\nimport WordData from \"../Aufgabe/wordlist.json\";\n\nexport default {\n  name: 'App',\n  components: {\n    \n  },\n  data:() => {\n    return{\n    home: window.location.href,\n    words: WordData,\n    storage: [],\n    cheat: false,\n    currentWord: String,\n    fehler: 0,\n    highscore:50,\n    timer: Object,\n    gefunden: \"\",\n    anzeigeString: \"\",\n    gameStart: false,\n    letters : Array.from(Array(26)).map((e, i) => String.fromCharCode(i + 65)),\n    }\n  }, methods:{\n    \n    startGame(){\n      // for(let i=0; i<localStorage.length; i++) {\n      //     let key = localStorage.key(i);\n      //     this.storage.push([key,localStorage.getItem(key)])\n      //     alert(`${key}: ${localStorage.getItem(key)}`);\n      //   }\n      this.gameStart=true\n      this.fehler = 0\n      \n      this.gefunden = \"\"\n      this.anzeigeString = \"\"\n      this.letters = Array.from(Array(26)).map((e, i) => String.fromCharCode(i + 65))\n      this.currentWord= this.words[Math.floor(Math.random()* this.words.length)]\n      for (let i = 0; i < this.currentWord.length; i++){\n        this.anzeigeString += \"_ \"\n      }\n      try {\n        clearInterval(this.timer)\n      } catch (error) {\n        console.log(\"YEYE ASS HAIRCUT\")\n      }\n      this.timer = setInterval(this.scoreManager,1000,-1)\n      \n    },\n   \n    scoreManager(time){\n      this.highscore += time\n    },\n    saveHighscore(){\n      localStorage.setItem(new Date().toLocaleString(),this.highscore)\n    },\n    buttonPressed(letter){\n      if(this.currentWord.includes(letter.toLowerCase())){\n        this.scoreManager(10)\n        this.gefunden += letter.toLowerCase()\n        this.letters= this.letters.filter((w)=>{\n          return w != letter \n        })\n        this.anzeigeString = \"\"\n        for (let i = 0; i < this.currentWord.length; i++){\n          console.log(this.currentWord[i] + \" \" + this.gefunden)\n          if(this.gefunden.includes(this.currentWord[i])){\n            this.anzeigeString += this.currentWord[i]\n          }else{ \n            this.anzeigeString += \"_ \"\n          }\n        }\n        if (this.anzeigeString==this.currentWord){\n          this.scoreManager(100)\n          this.startGame()\n          this.saveHighscore()\n      }\n    }else{\n      if(this.fehler==10){\n        alert(\"Fail\")\n        //Init\n        clearInterval(this.timer)\n        this.highscore = 50\n        this.startGame()\n      }else{\n      this.fehler+=1\n      this.letters= this.letters.filter((w)=>{\n          return w != letter \n        })\n      }\n    }\n      \n    },\n  },\n  mounted() {\n        \n         window.addEventListener('keyup', event => {\n            if (event.keyCode === 67) { \n            this.cheat = !this.cheat\n            }\n         })\n\n        for(let i=0; i<localStorage.length; i++) {\n          let key = localStorage.key(i);\n          if ( !isNaN( Number(localStorage.getItem(key)))){\n\n            this.storage.push([key,localStorage.getItem(key)])\n          }\n          // this.storage.push(\"2\")\n          // alert(this.storage)\n          // alert(`${key}: ${localStorage.getItem(key)}`);\n        }\n\n      }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.Tastertur{\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  \n}\n\n.button{\n  margin: 5px;\n  font-size: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}